<?xml version="1.0"?>

<robot name="copernicus_robot" xmlns:xacro="https://ros.org/wiki/xacro">
    <!-- xacro includes -->
    <xacro:include filename="$(find copernicus_description)/urdf/vehicle_properties.xacro"/>
    <xacro:include filename="$(find copernicus_description)/urdf/components/wheel.urdf.xacro"/>

    <!-- xacro properties -->
    <xacro:property name="PI" value="3.14159"/>

    <!-- xacro args -->
    <xacro:arg name="lidar_enabled" default="false"/>
    <xacro:arg name="imu_enabled" default="false"/>
    <xacro:arg name="gps_enabled" default="false"/>
    <xacro:arg name="camera_enabled" default="false"/>

    <material name="blue">
        <color rgba="0 0 0.8 1"/>
    </material>

    <material name="white">
       <color rgba="1 1 1 1"/>
    </material>

    <material name="gray">
        <color rgba="0.5 0.5 0.5 1"/>
    </material>

    <xacro:macro name="copernicus_robot">
        <!-- Footprint -->
        <link name="footprint"/>

        <!-- Joint from footprint to base link(chassis) -->
        <joint name="base_footprint_joint" type="fixed">
            <origin xyz="0 0 ${-(wheel_joint_z_abs+wheel_radius)}" rpy="0 0 0" />
            <parent link="base_link" />
            <child link="footprint" />
        </joint>

        <!-- Chassis a.k.a base_link -->
        <link name="base_link">
            <visual>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <mesh filename="package://copernicus_description/meshes/chassis.STL"/>
                </geometry>
                <material name="gray"/>
            </visual>
            <collision>
                <origin xyz="0 0 0" rpy="0 0 0" />
                <geometry>
                    <mesh filename="package://copernicus_description/meshes/chassis.STL"/>
                </geometry>
            </collision>
            <inertial>
                <mass value="${ chassis_mass }"/>
                <inertia ixx="${chassis_ixx}" ixy="${chassis_ixy}" ixz="${chassis_ixz}" iyy="${chassis_iyy}" iyz="${chassis_iyz}" izz="${chassis_izz}"/>
            </inertial>
        </link>

        <!-- Joint between chassis and body -->
        <joint name="chassis_body_joint" type="fixed">
            <parent link="base_link"/>
            <child link="body"/>
            <origin xyz="0 0 ${chassis_h_no_susp-0.005}" rpy="0 0 0"/>
        </joint>

        <!-- Body assembly -->
        <link name="body">
            <visual>
                <geometry>
                    <mesh filename="package://copernicus_description/meshes/body.STL"/>
                </geometry>
                <origin xyz="0 0 0" rpy="0 0 0"/>
                <material name="white"/>
            </visual>
            <collision>
                <geometry>
                    <mesh filename="package://copernicus_description/meshes/body.STL"/>
                </geometry>
                <origin xyz="0 0 0" rpy="0 0 0"/>
            </collision> 
            <inertial>
                <mass value="${body_mass}"/>
                <inertia ixx="${body_ixx}" ixy="${body_ixy}" ixz="${body_ixz}" iyy="${body_iyy}" iyz="${body_iyz}" izz="${body_izz}"/>
            </inertial>
        </link>

        <!-- Wheel -->
        <xacro:copernicus_wheel wheel_prefix="front_right">
            <origin xyz="${wheel_joint_x_abs} ${-wheel_joint_y_abs} ${-wheel_joint_z_abs}" rpy="0 0 0" />
        </xacro:copernicus_wheel>

        <xacro:copernicus_wheel wheel_prefix="back_right">
            <origin xyz="${-wheel_joint_x_abs} ${-wheel_joint_y_abs} ${-wheel_joint_z_abs}" rpy="0 0 0" />
        </xacro:copernicus_wheel>

        <xacro:copernicus_wheel wheel_prefix="front_left">
            <origin xyz="${wheel_joint_x_abs} ${wheel_joint_y_abs} ${-wheel_joint_z_abs}" rpy="0 0 0" />
        </xacro:copernicus_wheel>

        <xacro:copernicus_wheel wheel_prefix="back_left">
            <origin xyz="${-wheel_joint_x_abs} ${wheel_joint_y_abs} ${-wheel_joint_z_abs}" rpy="0 0 0" />
        </xacro:copernicus_wheel>

        <gazebo>
            <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
                <robotNamespace>/</robotNamespace>
            </plugin>
        </gazebo>

        <!-- LIDAR -->
        <xacro:if value="$(arg lidar_enabled)">
            <xacro:include filename="$(find copernicus_description)/urdf/accessories/lidar.urdf.xacro"/>
            <xacro:lidar></xacro:lidar>
        </xacro:if>

        <!-- IMU -->
        <xacro:if value="$(arg imu_enabled)">
            <xacro:include filename="$(find copernicus_description)/urdf/accessories/imu.urdf.xacro"/>
            <xacro:imu></xacro:imu>
        </xacro:if>

        <!-- GPS -->
        <xacro:if value="$(arg gps_enabled)">
            <xacro:include filename="$(find copernicus_description)/urdf/accessories/gps.urdf.xacro"/>
            <xacro:gps></xacro:gps>
        </xacro:if>

        <!-- Camera -->
        <xacro:if value="$(arg camera_enabled)">
            <xacro:include filename="$(find copernicus_description)/urdf/accessories/camera.urdf.xacro"/>
            <xacro:camera></xacro:camera>
        </xacro:if>
    </xacro:macro>
</robot>
