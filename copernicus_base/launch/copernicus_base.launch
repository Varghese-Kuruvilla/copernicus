<?xml version="1.0"?>
<launch>

    <arg name="sick_lms151" default="false"/>
    <arg name="sick_tim551" default="false"/>
    <arg name="hokuyo_ust_10lx" default="false"/>
    <arg name="robosense_lidar" default="true"/>
    <arg name="logitech_camera" default="true"/>
    <arg name="zed_camera" default="false"/>

    <group>
        <node name="copernicus_base_node" pkg="copernicus_base" type="copernicus_base_node">
            <remap from="/tf" to="/firmware_tf"/>
        </node>
    </group>

    <group>
        <arg name="model" default="$(find copernicus_description)/urdf/copernicus.xacro"/>

        <param name="robot_description" command="$(find xacro)/xacro.py --inorder $(arg model)"/>
        
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    </group>

    <group>
        <node pkg="um7" type="um7_driver" name="imu_driver">
            <param name="port" value="/dev/ttyUSB0"/>
            <param name="mag_updates" value="true"/>
            <param name="tf_ned_to_enu" value="false"/>
            <param name="frame_id" value="imu"/>

            <remap from="imu" to="imu"/>
        </node>

        <include file="$(find copernicus_localization)/launch/localization.launch"/>

        <node name="robot_pose_publisher" pkg="robot_pose_publisher" type="robot_pose_publisher"/>

    </group>

    <group>
        <node pkg="lms1xx" name="lms1xx" type="LMS1xx_node" output="screen" if="$(arg sick_lms151)">
            <param name="host" value="10.0.0.11" />
            <param name="frame_id" value="lidar" />
            <param name="publish_min_range_as_inf" value="false" />
        </node>

        <node name="sick_tim551_2050001" pkg="sick_tim" type="sick_tim551_2050001" respawn="false" output="screen" if="$(arg sick_tim551)">
            <param name="min_ang" type="double" value="-2.35619449019" />
            <param name="max_ang" type="double" value="2.35619449019" />
            <param name="intensity" type="bool" value="true" />
            <param name="skip" type="int" value="0" />
            <param name="frame_id" type="str" value="lidar" />
            <param name="time_offset" type="double" value="-0.001" />
            <param name="publish_datagram" type="bool" value="false" />
            <param name="subscribe_datagram" type="bool" value="false" />
            <param name="device_number" type="int" value="0" />
            <param name="time_increment" type="double" value="0.000185185" />
            <param name="range_min" type="double" value="0.05" />
            <param name="range_max" type="double" value="10.0" />
            <param name="hostname" type="string" value="10.0.1.10" />
            <param name="port" type="string" value="2112" />
            <param name="timelimit" type="int" value="5" />

            <remap from="/scan" to="scan"/>
        </node>

        <node name="urg_node" pkg="urg_node" type="urg_node" output="screen" if="$(arg hokuyo_ust_10lx)">
            <param name="ip_address" value="10.0.0.20"/>
            <param name="serial_port" value="/dev/ttyACM0"/>
            <param name="serial_baud" value="115200"/>
            <param name="frame_id" value="lidar"/>
            <param name="calibrate_time" value="true"/>
            <param name="publish_intensity" value="false"/>
            <param name="publish_multiecho" value="false"/>
            <param name="angle_min" value="-1.5707963"/>
            <param name="angle_max" value="1.5707963"/>
        </node>

        <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter" if="$(arg sick_lms151)">
            <rosparam command="load" file="$(find copernicus_base)/scan.yaml" />
        </node> 

        <arg name="model" default="RS16" />
        <arg name="device_ip" default="10.0.0.30" />
        <arg name="msop_port" default="6699" />
        <arg name="difop_port" default="7788" />
        <arg name="lidar_param_path" default="$(find rslidar_pointcloud)/data/rs_lidar_16/"/>

        <node name="rslidar_node" pkg="rslidar_driver" type="rslidar_node" output="screen" if="$(arg robosense_lidar)">
            <param name="model" value="$(arg model)"/>
            <param name="device_ip" value="$(arg device_ip)" />
            <param name="msop_port" value="$(arg msop_port)" />
            <param name="difop_port" value="$(arg difop_port)"/>
            <param name="frame_id" value="velodyne"/>
            <param name="cut_angle" value="30"/>
            <!--param name="pcap" value="path_to_pcap"/-->
        </node>

        <node name="cloud_node" pkg="rslidar_pointcloud" type="cloud_node" output="screen" if="$(arg robosense_lidar)">
            <param name="model" value="$(arg model)"/>
            <param name="curves_path" value="$(arg lidar_param_path)/curves.csv" />
            <param name="angle_path" value="$(arg lidar_param_path)/angle.csv" />
            <param name="channel_path" value="$(arg lidar_param_path)/ChannelNum.csv" />
        </node>

        <node name="pointcloud_to_laserscan" pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" if="$(arg robosense_lidar)">
            <remap from="cloud_in" to="rslidar_points"/>
            <remap from="scan" to="scan_filtered"/>
            <param name="min_height" value="0.0"/>
            <param name="max_height" value="2.0"/>
            <!-- <param name="angle_min" value="0.0"/> -->
            <param name="range_max" value="100"/>
        </node>
    </group>

    <group>
        <node name="camera" pkg="usb_cam" type="usb_cam_node" if="$(arg logitech_camera)">
            <remap from="/Camera/image_raw" to="/image_raw" />

            <param name="video_device" value="/dev/video1" />
            <param name="image_width" value="640" />
            <param name="image_height" value="480" />
            <param name="pixel_format" value="yuyv" />
            <param name="camera_frame_id" value="usb_cam" />
            <param name="io_method" value="mmap"/>
        </node>

        <arg name="zed_namespace" default="zed" />

        <arg name="svo_file" default="" /> <!-- <arg name="svo_file" default="path/to/svo/file.svo"> -->

        <arg name="camera_model" default="0" /> <!-- 0=ZED, 1=ZEDM-->
        <arg name="serial_number" default="0" />
        <arg name="verbose" default="true" />
        <arg name="resolution" default="2" /> <!--0=RESOLUTION_HD2K, 1=RESOLUTION_HD1080, 2=RESOLUTION_HD720, 3=RESOLUTION_VGA -->
        <arg name="frame_rate" default="30" />
        <!-- RESOLUTION_HD2K   -> 2208*1242, available framerates: 15 fps.
           RESOLUTION_HD1080 -> 1920*1080, available framerates: 15, 30 fps.
           RESOLUTION_HD720  -> 1280*720,  available framerates: 15, 30, 60 fps.
           RESOLUTION_VGA    -> 672*376,   available framerates: 15, 30, 60, 100 fps. -->

        <arg name="rgb_topic" default="rgb/image_rect_color" />
        <arg name="depth_topic" default="depth/depth_registered" />
        <arg name="camera_info_topic" default="rgb/camera_info" />
        <arg name="depth_camera_info_topic" default="depth/camera_info" />
        <arg name="camera_frame" default="zed_camera_center" />

        <group ns="$(arg zed_namespace)" if="$(arg zed_camera)">
            <!-- ZED Wrapper Node-->
            <include file="$(find zed_wrapper)/launch/zed_camera.launch">
                <arg name="svo_file" value="$(arg svo_file)" />
                <arg name="camera_model" value="$(arg camera_model)" />
                <arg name="serial_number" value="$(arg serial_number)" /> 
                <arg name="resolution" value="$(arg resolution)" />
                <arg name="frame_rate" value="$(arg frame_rate)" />
                <arg name="verbose" value="$(arg verbose)" />

                <arg name="rgb_topic" value="$(arg rgb_topic)" />
                <arg name="depth_topic" value="$(arg depth_topic)" />
                <arg name="rgb_info_topic" value="$(arg camera_info_topic)" />
                <arg name="depth_cam_info_topic" value="$(arg depth_camera_info_topic)" />
                <arg name="base_frame" value="$(arg camera_frame)" />

                <arg name="publish_tf" value="false"/>
                <param name="publish_map_tf" value="false"/>
                <arg name="publish_urdf" value="true"/>
            </include>
        </group>

    	<node name="Streamer" pkg="web_video_server" type="web_video_server" >
            <param name="address" value="0.0.0.0" />
            <param name="port" value="8080" />
            <param name="quality" value="20" />
            <param name="type" value="ros_compressed" />
        </node>

        <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch">
        </include>
    </group>

</launch>
