<?xml version="1.0"?>
<launch>

    <arg name="sick_lms151" default="true"/>
    <arg name="robosense_lidar" default="false"/>
    <arg name="logitech_camera" default="false"/>
    <arg name="ros_web_streaming" default="false"/>

    <group>
        <node name="copernicus_base_node" pkg="copernicus_base" type="copernicus_base_node">
            <remap from="/tf" to="/firmware_tf"/>
        </node>
    </group>

    <group>
        <arg name="model" default="$(find copernicus_description)/urdf/copernicus.xacro"/>

        <param name="robot_description" command="$(find xacro)/xacro.py --inorder $(arg model)"/>
        
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    </group>

    <group>
        <node pkg="um7" type="um7_driver" name="imu_driver">
            <param name="port" value="/dev/ttyUSB1"/>
            <param name="mag_updates" value="false"/>
            <param name="tf_ned_to_enu" value="false"/>
            <param name="frame_id" value="imu"/>

            <remap from="imu" to="imu"/>
        </node>

        <include file="$(find copernicus_localization)/launch/localization.launch"/>

        <node name="robot_pose_publisher" pkg="robot_pose_publisher" type="robot_pose_publisher"/>

    </group>

    <group if="$(arg sick_lms151)">
        <node pkg="lms1xx" name="lms1xx" type="LMS1xx_node" output="screen" if="$(arg sick_lms151)">
            <param name="host" value="10.0.0.50" />
            <param name="frame_id" value="lidar" />
            <param name="publish_min_range_as_inf" value="false" />
        </node>
        <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter" if="$(arg sick_lms151)">
            <rosparam command="load" file="$(find copernicus_base)/scan.yaml" />
        </node> 
    </group>

    <group if="$(arg robosense_lidar)">
        <arg name="model" default="RS16" />
        <arg name="device_ip" default="10.0.0.30" />
        <arg name="msop_port" default="6699" />
        <arg name="difop_port" default="7788" />
        <arg name="lidar_param_path" default="$(find rslidar_pointcloud)/data/rs_lidar_16/"/>

        <node name="rslidar_node" pkg="rslidar_driver" type="rslidar_node" output="screen" if="$(arg robosense_lidar)">
            <param name="model" value="$(arg model)"/>
            <param name="device_ip" value="$(arg device_ip)" />
            <param name="msop_port" value="$(arg msop_port)" />
            <param name="difop_port" value="$(arg difop_port)"/>
            <param name="frame_id" value="velodyne"/>
            <param name="cut_angle" value="30"/>
            <!--param name="pcap" value="path_to_pcap"/-->
        </node>

        <node name="cloud_node" pkg="rslidar_pointcloud" type="cloud_node" output="screen" if="$(arg robosense_lidar)">
            <param name="model" value="$(arg model)"/>
            <param name="curves_path" value="$(arg lidar_param_path)/curves.csv" />
            <param name="angle_path" value="$(arg lidar_param_path)/angle.csv" />
            <param name="channel_path" value="$(arg lidar_param_path)/ChannelNum.csv" />
        </node>

        <node name="pointcloud_to_laserscan" pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" if="$(arg robosense_lidar)">
            <remap from="cloud_in" to="rslidar_points"/>
            <remap from="scan" to="scan_filtered"/>
            <param name="min_height" value="0.0"/>
            <param name="max_height" value="2.0"/>
            <!-- <param name="angle_min" value="0.0"/> -->
            <param name="range_max" value="100"/>
        </node>
    </group>

    <group if="$(arg logitech_camera)">
        <node name="camera" pkg="usb_cam" type="usb_cam_node" if="$(arg logitech_camera)">
            <remap from="/Camera/image_raw" to="/image_raw" />

            <param name="video_device" value="/dev/video1" />
            <param name="image_width" value="640" />
            <param name="image_height" value="480" />
            <param name="pixel_format" value="yuyv" />
            <param name="camera_frame_id" value="usb_cam" />
            <param name="io_method" value="mmap"/>
        </node>
    </group>
    <group if="$(arg ros_web_streaming)">
    	<node name="Streamer" pkg="web_video_server" type="web_video_server" if="$(arg ros_web_streaming)">
            <param name="address" value="0.0.0.0" />
            <param name="port" value="8080" />
            <param name="quality" value="20" />
            <param name="type" value="ros_compressed" />
        </node>

        <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch">
        </include>
    </group>

</launch>
