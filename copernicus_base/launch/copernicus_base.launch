<?xml version="1.0"?>
<launch>

    <group>
        <node name="copernicus_base_node" pkg="copernicus_base" type="copernicus_base_node">
            <remap from="/tf" to="/firmware_tf"/>
        </node>
    </group>

    <group>
        <arg name="model" default="$(find copernicus_description)/urdf/copernicus.xacro"/>

        <param name="robot_description" command="$(find xacro)/xacro.py --inorder $(arg model)"/>
        
        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" />
    </group>

    <group>
        <node pkg="um7" type="um7_driver" name="imu_driver">
            <param name="port" value="/dev/ttyUSB0"/>
            <param name="mag_updates" value="false"/>
            <param name="tf_ned_to_enu" value="false"/>
            <param name="frame_id" value="imu"/>

            <remap from="imu" to="imu"/>
        </node>

        <include file="$(find copernicus_localization)/launch/localization.launch"/>

    </group>

    <group>
        <!--<node pkg="lms1xx" name="lms1xx" type="LMS1xx_node" output="screen">
            <param name="host" value="10.0.1.11" />
            <param name="frame_id" value="lidar" />
            <param name="publish_min_range_as_inf" value="true" />
        </node>-->

        <!-- <node name="urg_node" pkg="urg_node" type="urg_node" output="screen">
            <param name="ip_address" value="192.168.0.10"/>
            <param name="serial_port" value=""/>
            <param name="serial_baud" value=""/>
            <param name="frame_id" value="lidar"/>
            <param name="calibrate_time" value="true"/>
            <param name="publish_intensity" value="true"/>
            <param name="publish_multiecho" value="false"/>
            <param name="angle_min" value="-2.35619"/>
            <param name="angle_max" value="2.35619"/>
        </node> -->

        <node name="sick_tim551_2050001" pkg="sick_tim" type="sick_tim551_2050001" respawn="false" output="screen">
            <param name="min_ang" type="double" value="-2.35619449019" />
            <param name="max_ang" type="double" value="2.35619449019" />
            <param name="intensity" type="bool" value="true" />
            <param name="skip" type="int" value="0" />
            <param name="frame_id" type="str" value="lidar" />
            <param name="time_offset" type="double" value="-0.001" />
            <param name="publish_datagram" type="bool" value="false" />
            <param name="subscribe_datagram" type="bool" value="false" />
            <param name="device_number" type="int" value="0" />
            <param name="time_increment" type="double" value="0.000185185" />
            <param name="range_min" type="double" value="0.05" />
            <param name="range_max" type="double" value="10.0" />
            <param name="hostname" type="string" value="10.0.1.10" />
            <param name="port" type="string" value="2112" />
            <param name="timelimit" type="int" value="5" />

            <remap from="/scan" to="scan"/>
        </node>

        <node pkg="laser_filters" type="scan_to_scan_filter_chain"
          name="laser_filter">
            <rosparam command="load" file="$(find copernicus_base)/scan.yaml" />
        </node> 
    </group>

    <!-- <group>
        <node name="Camera" pkg="usb_cam" type="usb_cam_node">
            <remap from="/Camera/image_raw" to="/image_raw" />

            <param name="video_device" value="/dev/video0" />
            <param name="image_width" value="640" />
            <param name="image_height" value="480" />
            <param name="pixel_format" value="yuyv" />
            <param name="camera_frame_id" value="usb_cam" />
            <param name="io_method" value="mmap"/>
        </node>

    	<node name="Streamer" pkg="web_video_server" type="web_video_server" >
            <param name="address" value="0.0.0.0" />
            <param name="port" value="8080" />
            <param name="quality" value="20" />
            <param name="type" value="ros_compressed" />
        </node>

        <include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch">
        </include>
    </group> -->

</launch>
