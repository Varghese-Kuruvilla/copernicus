<?xml version="1.0"?>
<launch>
    <arg name="um7_imu" default="true"/>
    <arg name="wit_wt901c_imu" default="false"/>
    <arg name="sick_lms151" default="false"/>
    <arg name="velodyne_vlp16" default="true"/>
    
        
    <group if="$(arg um7_imu)">
        <node pkg="um7" type="um7_driver" name="imu_driver">
            <param name="port" value="/dev/imu"/>
            <param name="mag_updates" value="false"/>
            <param name="tf_ned_to_enu" value="false"/>
            <param name="frame_id" value="imu"/>
            <remap from="imu" to="imu"/>
        </node>
    </group>

    <group if="$(arg wit_wt901c_imu)">
      <node pkg="wit_imu_driver" type="wit_imu_driver" name="wit_imu_driver">
        <param name="device" value="/dev/imu"/>
        <param name="frame_id" value="imu"/>
        <param name="baud" value="115200"/>
        <remap from="data_raw" to="imu/data"/>
      </node>
    </group>

    <group if="$(arg sick_lms151)">
        <node pkg="lms1xx" name="lms1xx" type="LMS1xx_node" output="screen" if="$(arg sick_lms151)">
            <param name="host" value="10.0.0.50" />
            <param name="frame_id" value="lidar" />
            <param name="publish_min_range_as_inf" value="false" />
        </node>
        <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter" if="$(arg sick_lms151)">
            <rosparam command="load" file="$(find copernicus_base)/config/scan.yaml" />
        </node> 
    </group>


    <group if="$(arg velodyne_vlp16)">
        
      <arg name="calibration" default="$(find velodyne_pointcloud)/params/VLP16db.yaml"/>
      <arg name="device_ip" default="192.168.1.201" />
      <arg name="frame_id" default="velodyne" />
      <arg name="manager" default="$(arg frame_id)_nodelet_manager" />
      <arg name="max_range" default="100.0" />
      <arg name="min_range" default="0.4" />
      <arg name="pcap" default="" />
      <arg name="port" default="2368" />
      <arg name="read_fast" default="false" />
      <arg name="read_once" default="false" />
      <arg name="repeat_delay" default="0.0" />
      <arg name="rpm" default="600.0" />
      <arg name="gps_time" default="false" />
      <arg name="cut_angle" default="-0.01" />
      <!-- <arg name="cut_angle" default="0.1" /> -->

      <arg name="timestamp_first_packet" default="false" />
      <arg name="laserscan_ring" default="-1" />
      <arg name="laserscan_resolution" default="0.007" />
      <arg name="organize_cloud" default="false" />

      <!-- start nodelet manager and driver nodelets -->
      <include file="$(find velodyne_driver)/launch/nodelet_manager.launch">
        <arg name="device_ip" value="$(arg device_ip)"/>
        <arg name="frame_id" value="$(arg frame_id)"/>
        <arg name="manager" value="$(arg manager)" />
        <arg name="model" value="VLP16"/>
        <arg name="pcap" value="$(arg pcap)"/>
        <arg name="port" value="$(arg port)"/>
        <arg name="read_fast" value="$(arg read_fast)"/>
        <arg name="read_once" value="$(arg read_once)"/>
        <arg name="repeat_delay" value="$(arg repeat_delay)"/>
        <arg name="rpm" value="$(arg rpm)"/>
        <arg name="gps_time" value="$(arg gps_time)"/>
        <arg name="cut_angle" value="$(arg cut_angle)"/>
        <arg name="timestamp_first_packet" value="$(arg timestamp_first_packet)"/>
      </include>

      <!-- start cloud nodelet -->
      <include file="$(find velodyne_pointcloud)/launch/cloud_nodelet.launch">
        <arg name="model" value="VLP16"/>
        <arg name="calibration" value="$(arg calibration)"/>
        <arg name="manager" value="$(arg manager)" />
        <arg name="fixed_frame" value="$(arg frame_id)" />
        <arg name="target_frame" value="$(arg frame_id)" />
        <arg name="max_range" value="$(arg max_range)"/>
        <arg name="min_range" value="$(arg min_range)"/>
        <arg name="organize_cloud" value="$(arg organize_cloud)"/>
    <!-- <remap from="cloud_in" to="velodyne_points"/> -->
      </include>


      <!-- start laserscan nodelet -->
        <include file="$(find velodyne_pointcloud)/launch/laserscan_nodelet.launch">
          <remap from="scan" to="scan_filtered"/>
          <arg name="manager" value="$(arg manager)" />
          <arg name="ring" value="$(arg laserscan_ring)"/>
          <arg name="resolution" value="$(arg laserscan_resolution)"/>
        </include>
        <node pkg="laser_filters" type="scan_to_scan_filter_chain" name="laser_filter">
        <rosparam command="load" file="$(find copernicus_base)/config/scan.yaml" />
        </node>
    </group>

</launch>
